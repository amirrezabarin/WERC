

@using Model.ToolsModels.Grid;
@using Model.ViewModels.Team;

@model VmTeamMemberManagement
@{
    ViewBag.Title = "Team Member Management";

    Layout = "~/Views/Shared/_LayoutLeader.cshtml";

    Model.ReadOnly = false;
}

<div class="col-xs-6 col-sm-2">
    <span class="form-title">@Model.TeamName </span>
</div>

<div class="col-xs-6 col-sm-10">
 
    <div class="col-xs-12">

        <input id="writtenReportFileInput" name="file" type="file" class="form-control hidden" />

        <img id="writtenReportImg"
             src="~/Resources/Images/Mimetypes128x128/@Model.WrittenReportUrl.Split(new string[] { "?CT=" },
                                                     StringSplitOptions.RemoveEmptyEntries)[1]" class="written-report-img"
             onclick="$('#writtenReportFileInput').click()" title="@Model["Add/Replace Written Report"]" />

        <button type="button" class="btn btn-success" onclick="$('#writtenReportFileInput').click()">
            @Model["Late Add/Replace Written Report"]
        </button>
       
        @if (Model.WrittenReportUrl.Split(new string[] { "-?CT=" }, StringSplitOptions.None)[0] != "")
        {
            <a href="@HttpUtility.HtmlDecode(@Model.WrittenReportUrl)" id="writtenreporturlId"
               data-attachedurl="Model.WrittenReportUrl" class="display-block" target="_blank">
                @{
                    var splitItem = Model.WrittenReportUrl.Split(new string[] { "?CT" }, StringSplitOptions.RemoveEmptyEntries)[0];
                    var slashSplit = splitItem.Split('/');
                }
                <span class="col-xs-12 display-block" id="writtenreporturlSpanId">Attached File:  @slashSplit[slashSplit.Length - 1]</span>
            </a>
            <hr />
        }
        else
        {
            <a href="" id="writtenreporturlId" class="display-block" target="_blank">
                <span class="col-xs-12 display-block" id="writtenreporturlSpanId"> </span>
            </a>
            <hr />
        }
        <script>
            $('#writtenReportFileInput').on('change', function (e) {
                uploadWrittenReport();
            });
        </script>

        @Html.HiddenFor(model => model.WrittenReportUrl, htmlAttributes: new { @id = "WrittenReportUrlHidden" })
        @Html.ValidationMessage(@Model["WrittenReportUrl"], "", new { @class = "text-danger" })

    </div>

</div>
<hr />

<div class="col-xs-12 col-sm-12">
    <h5>Double-click on the grid row to update team member. To add a new team member, click the gray "add member" box on the right side of your screen.</h5>
    <hr />
    @Html.Partial("_TeamMemberGrid", new VmJsGrid()
{
    DataAction = "gtbf",
    DataController = "TeamMember",

    CreateAction = "Create",
    CreateController = "TeamMember",

    EditAction = "Edit",
    EditController = "TeamMember",

    DeleteAction = "Delete",
    DeleteController = "TeamMember",

    ReadOnly = false,
    HtmlElementId = "TeamManagement_TeamMemberJsGrid",
    ExternalHtmlControlId = "_TeamMemberGrid_TeamId_Hidden",
    CurrentUserRoles = Model.CurrentUserRoles
})
</div>

<input type="hidden" id="_TeamMemberGrid_TeamId_Hidden" value="@Model.TeamId" />

<script>
    $(document).ready(function () {

    });

    function showDeleteTeamConfirmDialog(sender) {

        var confirmDeleteDialogObjec =
            {
                title: "Delete Team",
                sender: sender,
                width: "",
                height: "auto",
                dialogConfirmId: "confirmDialogContainer",
                yesButton:'@Model["Yes"]',
                noButton: '@Model["No"]',
                acceptCallbak: function (sender) {

                    $.ajax({
                        type: "POST",
                        url: "/team/dt",
                        data: { id: $(sender).data("id") }
                    }).done(function (result) {
                        alert(result.message);
                        if (result.success == true) {
                            location.href = "/advisor/tl";
                        }
                    });
                },
                rejectCallbak: function () { }
            }

        openConfirmDialog(confirmDeleteDialogObjec);
    }
</script>

<script type="text/javascript">
    function uploadWrittenReport() {

        var formData = new FormData();

        var writtenReport_file = document.getElementById("writtenReportFileInput").files[0];

        formData.append("oldWrittenReportUrl", "@Model.WrittenReportUrl");
        formData.append("uploadedWrittenReport", writtenReport_file);
        formData.append("teamId", @Model.TeamId);

        HoldOn.open({
            theme: 'sk-cube-grid',
            message: "<h4>@Model["Please wait..."]</h4>"
        });

        $.ajax({
            url: "/team/urr", //you can get also action attribute from form using form.attr('action')
            type: 'POST',
            data: formData,
            processData: false,
            contentType: false,
        }).done(
            function (result)
            {
                if (result.success == true) {
                    alert(result.message);
                    $("#WrittenReportUrlHidden").val(result.writtenReportUrl);
                    $("#writtenReportImg").attr("src", result.writtenReportUrlIcon);
                            
                    $("#writtenreporturlId").attr("href", result.writtenReportUrl);
                    $("#writtenreporturlSpanId").text("Attached File: " + result.writtenReportFileName);
                }

                HoldOn.close();
            }).fail(function () { HoldOn.close(); });
    }
</script>