

@using Model.ToolsModels.Grid;
@using Model.ViewModels.Team;

@model VmTeamFullInfoManagement

@{
    ViewBag.Title = "Team Full Info Management";
    Layout = "~/Views/Shared/_LayoutSafetyAdmin.cshtml";
    Model.ReadOnly = false;
}

<script>
    function Dictionary() {

        this.store = {};

        this.setValue = function (key, value) {
            store[key] = value;
        }

        this.getValue = function (key) {
            return store[key];
        }

        return this;
    }
    var teamArrayDictionary = Dictionary();
    var teamIdArray = [];


    @foreach (var item in Model.MemberUserIds)
    {
        var teamArray = "var team_" + item.TeamId + "_Members = [";
        foreach (var userId in item.UserIds)
        {
            teamArray += "'"+ userId + "',";
        }

        teamArray = teamArray.Substring(0, teamArray.Length - 1) + "];" + "\n";

        @Html.Raw(teamArray);
        @Html.Raw("teamIdArray.push(" + item.TeamId + ");" + "\n");

        var teamArrayName = "team_" + item.TeamId + "_Members";

        @Html.Raw("teamArrayDictionary.setValue(" + item.TeamId + "," + teamArrayName + ");" + "\n");

    }
</script>

<h4><span class=""> @Model["Team Email List"] </span></h4>

<hr />

<div>
    <button type="button" id="sendEmailToSelectedTeams" class="btn btn-primary">Send email</button>
    <button type="button" id="clearSelectedTeams" class="btn btn-danger">Clear selections</button>
</div>

<div class="hidden">
    <div id="sendEmailDialogDialog" class="">

        <div class="col-xs-12">

            <div class="form-group">

                <label for="" class="control-label">@Model["Add other email(s)"]</label>

                <div id="generateAdditionalEmailButton" class="btn btn-primary btn-xs btn-add-user" onclick="generateAdditionalEmailTextBox()"> </div>
                <div id="additionalEmailTextBoxContainer" class="row">
                    <!--Textboxes will be added here -->
                </div>
            </div>

            <div class="form-group">

                <label for="emailSubject" class="control-label">@Model["Subject"]</label>

                <input type="text" id="emailSubject" name="emailSubject" required class="form-control">
            </div>

            <div class="form-group">
                <label for="emailBody" class="control-label">@Model["Message"]</label>
                <textarea id="emailBody" name="emailBody"></textarea>

            </div>
        </div>

    </div>
</div>

<div class="col-xs-12 col-sm-12">
    @Html.Partial("PartialViewTeamEmailGrid", new VmJsGrid()
    {
        DataAction = "gtebf",
        DataController = "team",

        EditAction = "etps",
        EditController = "team",

        ReadOnly = false,
        HtmlElementId = "TeamFullInfo_TeamFullInfoJsGrid",
        CurrentUserRoles = Model.CurrentUserRoles
    })
</div>
<input type="hidden" id="additionalEmailHidden" />

<script>

    $(document).ready(function () {
        $("#emailBody").Editor();

    });

    $("#sendEmailToSelectedTeams").click(function () {
        showsendEmailDialogDialog();
    });

    $("#clearSelectedTeams").click(function () {
        $('.memeber-userids').each(function () {
            $(this).val('');
            $("#selectAllCheckbox").prop('checked',true);
            $("#selectAllCheckbox").click();
        });

        $('.singleCheckbox').each(function () {
            $(this).prop('checked', false);
        });

        $("#teamCheckboxStatusHidden").val('');

    });

    function showsendEmailDialogDialog() {

            var showsendEmailDialogDialogObject =
            {
                sender: '',
                width: "50%",
                height: "auto",
                dialogConfirmId: "sendEmailDialogDialog",
                yesButton:'@Html.Raw(Model["Send Message"])',
                noButton:'@Model["Cancel"]',
                acceptCallbak: function () {
                     HoldOn.open({
                         theme: 'sk-cube-grid',
                         message: "<h4>@Model["Please wait..."]</h4>"
                    });

                    var allSelectedMemberUserIds = collectAllSelectedMemberUserIds();
                    collectAdditionalEmails();
                    debugger
                    var additionalEmail = $("#additionalEmailHidden").val() != '' ? $("#additionalEmailHidden").val().split(",") : null;

                    $.ajax({
                        type: "POST",
                        url: "/admin/se",
                        data:
                        {
                            userIds: allSelectedMemberUserIds,
                            additionalEmails: additionalEmail,
                            emailSubject: $("#emailSubject").val(),
                            emailBody: $("#emailBody").Editor('getText')
                        },
                        dataType: "json",
                        success: function (response) {

                            alert(response.message);
                            HoldOn.close();
                        },
                        error: function (data, textStatus, XMLHttpRequest) {

                            alert(data.message);
                            HoldOn.close();
                        },
                    });

                },

                rejectCallbak: function () {


                }
            }

            openConfirmDialog(showsendEmailDialogDialogObject);
    }

</script>

@*Email TextBoxs*@
<script type="text/javascript">

    function getCommaSeparateElementsValue(elementName) {

        var values = "";
        $("input[name='" + elementName + "']")
            .map(function () {
                if ($(this).val() != '') {
                    values += $(this).val() + ",";
                }

            }).get();

        if (values.length > 0) {
            values = values.substring(0, values.length - 1);
        }
        debugger
        return values;

    }

    function collectAdditionalEmails()
    {
        $("#additionalEmailHidden").val(getCommaSeparateElementsValue('DynamicAdditionalEmailTextBox'));
    }

    function collectAllSelectedMemberUserIds()
    {
        var allSelectedMemberUserIds = [];
        debugger
        $('.memeber-userids').each(function () {
            var selectedUserIds = $(this).val();
            var tempArray = [];
            if (selectedUserIds.length > 0)
            {
                tempArray = JSON.parse(selectedUserIds);
            }

            tempArray.map(function (userId) {

                allSelectedMemberUserIds.push(userId);
            });
        });

        return allSelectedMemberUserIds;
    }

    function GetDynamicEmailElements(additionalEmail) {
        var element =

            "<div class='col-xs-12 col-sm-4'>" +
                "<div class='input-group row'>" +
                    "<input class='form-control' name = 'DynamicAdditionalEmailTextBox' type='email' placeholder='@Model["Email"]' value = '" + additionalEmail + "' autocomplete='off' />" +
                    "<span class='input-group-btn'>" +
                    "<button type='button' class='btn btn-danger btn-xs submit-btn-delete' onclick = 'RemoveEmailElements(this)'></button>" +
                    "</span>" +
                "</div>" +
            "</div>";

        return element;
    }

    function generateAdditionalEmailTextBox() {
        var div = document.createElement('DIV');
        $(div).addClass("form-group element-group");
        div.innerHTML = GetDynamicEmailElements("", "");
        document.getElementById("additionalEmailTextBoxContainer").appendChild(div);
    }

    function RemoveEmailElements(div) {
        document.getElementById("additionalEmailTextBoxContainer").removeChild(div.parentNode.parentNode.parentNode.parentNode);
    }



</script>