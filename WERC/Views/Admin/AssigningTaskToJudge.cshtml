

@using Model.ViewModels.Admin;
@using Model.ViewModels.Task;

@model VmAssignTaskToJudgeManagement
@{
    ViewBag.Title = "Assigning Task To Judge";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";

}

<script>

    $(document).ready(function () {

        var dragMessage = '@Model["Drag task below and drop to drop zone or double click it to assign"]';

        if (deviceIsTouchable == true) {
            dragMessage =  '@Model["Double Touch on task below to assign it to assign"]';
        }

        $("#dragMessageDiv").text(dragMessage);

        $('#judge_DropDownList').selectpicker({
            liveSearch: true,
            maxOptions: 1
        });

        if ($("#judge_DropDownList").val() != "") {
            getJudgeTasks($("#judge_DropDownList").val());
        }

        function getJudgeTasks(id) {
            $.ajax({
                url: '/Admin/gjt',
                type: 'POST',
                data: { "userId": id },
                dataType: "html",

            }).done(function (response) {
                $("#judgeTasks").html(response);
            }).fail(function (data, textStatus, XMLHttpRequest) {
                    $("#judgeTasks").html(data.responseText);
                });
        }

        $("#judge_DropDownList").change(
            function (evt) {

                if ($("#judge_DropDownList").val() != "") {

                    getJudgeTasks($("#judge_DropDownList").val());
                }
            });

    });


</script>
<a name="dropAnchor"></a>


<table class="table table-condensed">
    <tr class="darg-drop-title">
        <td>
            <div id="dragMessageDiv" class="stack-header"></div>
        </td>
        <td>
            <div class="form-group-sm stack-header text-center">
                <div class="col-xs-12">
                    @Html.Label(@Model["Drop zone for selected judge"], new { @class = "control-label" })
                </div>

            </div>
        </td>
    </tr>
    <tr>
        <td class="darg-width">
            <div id="_AssignTaskToJudgeManagement_TaskList" class="col-xs-12">
                @Html.Partial("_TaskList", new VmTaskCollection()
                   {
                       ParentHtmlControlId = "_AssignTaskToJudgeManagement_TaskList",
                       Draggable = true,
                       ShowSearchBox = true,
                       TaskList = Model.Tasks,
                       OnItemDragged = "updateAssignment",
                       HtmlControlId = "Admin_TaskList",
                       DataAction = "ts",
                       DataController = "Admin",
                       AllowEdit = true,
                       AllowDelete = true,
                       ActiveItemId = -1,
                       OnItemSelected = "",
                   })
            </div>
        <td class="drop-width">
            <div class="col-xs-12 text-center ">
                @Html.DropDownList("judge_DropDownList",
                   (IEnumerable<SelectListItem>)Model.Judges,new {@class = "" })
            </div>
            <div id="dropZone" class="stack col-xs-12 text-left">

                <div class="stack-drop" id="judgeTasks">


                </div>
            </div>
        </td>
    </tr>

</table>

<script>
    function updateAssignment(dragedItem) {

        var id = $("#judge_DropDownList").val();

        if (id == "" || id == null) {
            alert('@Model["Please select Judge..."]');
            dragedItem.find("#removeSection").parent().parent().parent().remove();
            return;
        }

        var ids = [];

        $("#judgeTasks").children("div.card").each(function (id, item) {
            ids[id] = $(item).attr("id");
        });

        $.ajax({
            url: '/Admin/attj',
            type: 'POST',
            data: { userId: id, taskIds: ids},
            dataType: "json",
            cache: false,

        }).done(function (data) {
                if (data.success == true) {
                    //  alert('@Model["Task(s) has been assigned to Judge"]');
                }
                else {
                    alert('@Model["Operation has failed"]');

                }
            }).fail(function () {
                console.log("no display");
            });
    }
</script>
