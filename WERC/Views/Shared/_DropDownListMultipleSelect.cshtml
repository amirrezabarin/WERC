
@using Model.ToolsModels.DropDownList

@model  VmDropDownList

@{
    var loadDataUrl = Url.Action(Model.DataAction, Model.DataController) + "/?updateProfile=true";
}

<select class="selectpicker form-control"
        data-live-search="true"
        data-hide-disabled="true"
        data-actions-box="true"
        multiple
        id="@Model.HtmlElementId"
        name="@Model.HtmlElementId">
    <option value="-1">@Model.OptionLabel</option>
</select>

<script>
    $(document).ready(function () {

        $.getJSON('@loadDataUrl', function (response) {

            $("#@Model.HtmlElementId").empty();

            var slectedValues = '@Model.SelectedItems'.split(',');
            $.each(response, function (index, item) {
                
                if (slectedValues.indexOf(item.Value) != -1) {

                    $("#@Model.HtmlElementId").append($('<option selected></option>').text(item.Text).val(item.Value));
                }
                else {
                    $("#@Model.HtmlElementId").append($('<option></option>').text(item.Text).val(item.Value));
                }
            });

            $('#@Model.HtmlElementId').selectpicker('refresh');;

            $("#@Model.HtmlElementId").change(function () {

                @if (!string.IsNullOrEmpty(@Model.OnItemSelected))
                {
                    @Html.Raw("var ids = getCheckedOptions('"+@Model.HtmlElementId+"');\n")
                    @Model.OnItemSelected@Html.Raw("(ids);")
                }
            });

            @if (!string.IsNullOrEmpty(@Model.OnItemSelected))
            {
                @Html.Raw("var ids = getCheckedOptions('"+@Model.HtmlElementId+"');\n")
                @Model.OnItemSelected@Html.Raw("(ids);")
            }
        });
    });

    function getCheckedOptions(id) {
        var checkedList = [];
        $('#' + id + ' option:selected').each(function () {
            checkedList.push($(this).attr("value"));
        });
        return checkedList;
    }
</script>
